@using ConstructionDiary.ResourceFiles;
@model BillSiteVM
@{
    ViewBag.Title = "Site";
}

<section class="wrapper site-min-height">
    <div class="row">
        <div class="col-lg-12">
            <section class="panel">
                <header class="panel-heading">
                    <strong>@Resource.EditBill</strong>
                </header>
                <div class="panel-body">
                    <div class="col-sm-12">
                        <div class="form">
                            @using (Html.BeginForm("EditBill", "Site", FormMethod.Post, new { @id = "BillFormId", @class = "", enctype = "multipart/form-data", role = "form" }))
                            {

                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="row">
                                    <div class="col-sm-4 form-group">
                                        @Html.LabelFor(model => model.BillDate, htmlAttributes: new { @class = "" })
                                        @Html.EditorFor(model => model.BillDate, new { htmlAttributes = new { @class = "form-control default-date-picker valid", @placeholder = "DD/MM/YYYY", maxlength = "50", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.BillDate, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-sm-4 form-group">
                                        @Html.LabelFor(model => model.BillNo, htmlAttributes: new { @class = "" })
                                        @Html.EditorFor(model => model.BillNo, new { htmlAttributes = new { @class = "form-control", @placeholder = Resource.BillNo, maxlength = "50", @autocomplete = "off" } })

                                    </div>

                                    <div class="col-sm-4 form-group">
                                        @Html.LabelFor(model => model.BillType, htmlAttributes: new { @class = "" })
                                        <p class="clsRadio">
                                            <label style="color:green;">@Html.RadioButtonFor(m => m.BillType, "Square Feet", new { @checked = true }) @Resource.SquareFeet</label>
                                            <label style="color:red;">@Html.RadioButtonFor(m => m.BillType, "Other") Other </label>
                                        </p>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-4 form-group">
                                        @Html.LabelFor(model => model.SquareFeet, htmlAttributes: new { @class = "" })
                                        @if (Model.BillType == "Other")
                                        {
                                            @Html.EditorFor(model => model.SquareFeet, new { htmlAttributes = new { @type = "number", @class = "form-control", @placeholder = Resource.SquareFeet, @disabled = "disabled" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.SquareFeet, new { htmlAttributes = new { @type = "number", @class = "form-control", @placeholder = Resource.SquareFeet } })
                                        }
                                        @Html.ValidationMessageFor(model => model.SquareFeet, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-sm-4 form-group">
                                        @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "" })
                                        @if (Model.BillType == "Other")
                                        {
                                            @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @type = "number", @class = "form-control", @placeholder = Resource.Rate, @disabled = "disabled" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @type = "number", @class = "form-control", @placeholder = Resource.Rate } })
                                        }
                                        @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-sm-4 form-group">
                                        @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "" })
                                        @if (Model.BillType == "Other")
                                        {
                                            @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @type = "number", @class = "form-control", @placeholder = Resource.Total } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @type = "number", @class = "form-control", @placeholder = Resource.Total, @disabled = "disabled" } })
                                        }
                                        @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row">
                                      
                                    <div class="col-sm-4 form-group">
                                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "" })
                                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @placeholder = Resource.Remarks, maxlength = "200" } })
                                    </div>

                                </div>

                                <div class="row">
                                    <div class="col-sm-4 ">
                                        @Html.HiddenFor(x => x.SiteId)
                                        @Html.HiddenFor(x => x.BillId)
                                        <button id="btnSubmit" class="btn btn-info" type="submit">@Resource.Save</button>
                                        <a href="/admin/site/bill/@Model.SiteId" class="btn btn-default">@Resource.Cancel</a>
                                    </div>
                                </div>

                            }

                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
</section>

<script src="~/Areas/Admin/Content/js/jquery.js"></script>
<script>

    jQuery(document).ready(function () {
        jQuery('html, body').animate({ scrollTop: 0 }, 1000);
    });

    $(document).on("change", "#BillType", function () {
        var type = $("input[name='BillType']:checked").val();

        clearTextbox();

        if (type == "Other") {
            $("#SquareFeet").prop('disabled', true)
            $("#Rate").prop('disabled', true)
            $("#TotalAmount").prop('disabled', false)
        }
        else {
            $("#SquareFeet").prop('disabled', false)
            $("#Rate").prop('disabled', false)
            $("#TotalAmount").prop('disabled', true)
        }
    });

    function clearTextbox() {
        $("#SquareFeet").val('');
        $("#Rate").val('');
        $("#TotalAmount").val('');
    }

    jQuery("#btnSubmit").click(function (event) {
        if (jQuery("form").valid()) {
            jQuery.blockUI({ message: "<h4>Please Wait...</h4>" });
        }
    });

    $(document).on("keyup", "#Rate, #SquareFeet", function () {

        var SquareFeet = $("#SquareFeet").val();
        var Rate = $("#Rate").val();
        var TotalAmount = 0;

        if (SquareFeet != "" && Rate != "") {
            TotalAmount = parseFloat(SquareFeet) * parseFloat(Rate);
        }

        $("#TotalAmount").val(TotalAmount);

    });
</script>